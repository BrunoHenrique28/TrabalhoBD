/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgInterface;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatter;
import javax.swing.text.MaskFormatter;
import pkgInterface.Dialogs.DialogFinalizarVenda;
import pkgInterface.Dialogs.DialogPesquisaProdutos;
import util.ConexaoBD;
import util.Produto;

/**
 *
 * @author felip
 */
public class TelaDeVenda extends javax.swing.JFrame {

    private double valorDaVenda;
    private int quantidadeTotalDeItens;
    private ArrayList<Produto> produtos;
    private Produto ultimoProdutoBuscado;
    
    public TelaDeVenda() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnFinalizarVenda = new javax.swing.JButton();
        btnNovaVenda = new javax.swing.JButton();
        btnCancelarVenda = new javax.swing.JButton();
        edtQuantidadeDeItens = new javax.swing.JTextField();
        edtValorTotal = new javax.swing.JTextField();
        edtData = new javax.swing.JFormattedTextField();
        btnCalendario = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        edtCodigoDoProduto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        edtDescricao = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        edtPrecoUnitario = new javax.swing.JTextField();
        spinnerQuantidade = new javax.swing.JSpinner();
        btnAdicionarItem = new javax.swing.JButton();
        btnEditarItem = new javax.swing.JButton();
        btnRemoverItem = new javax.swing.JButton();
        btnGravarEdicao = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabItens = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(776, 0));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VENDA");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Venda"));

        jLabel2.setText("Data");

        jLabel4.setText("Valor Total");

        jLabel5.setText("Quantidade de Itens");

        btnFinalizarVenda.setText("Finalizar Venda");
        btnFinalizarVenda.setEnabled(false);
        btnFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarVendaActionPerformed(evt);
            }
        });

        btnNovaVenda.setText("Nova Venda");
        btnNovaVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaVendaActionPerformed(evt);
            }
        });

        btnCancelarVenda.setText("Cancelar Venda");
        btnCancelarVenda.setEnabled(false);
        btnCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVendaActionPerformed(evt);
            }
        });

        edtQuantidadeDeItens.setEditable(false);
        edtQuantidadeDeItens.setEnabled(false);
        edtQuantidadeDeItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtQuantidadeDeItensActionPerformed(evt);
            }
        });

        edtValorTotal.setEditable(false);
        edtValorTotal.setEnabled(false);

        /*
        edtData.setFormatterFactory(new javax.swing.text.DataFormatterFactory(new javax.swing.text.MaskFormatter("dd/MM/yyyy")));
        */
        edtData.setEnabled(false);
        MaskFormatter formater = new MaskFormatter();
        try {
            formater.setMask("##/##/####");
            formater.install(edtData);
        } catch (ParseException ex) {
            Logger.getLogger(TelaDeVenda.class.getName()).log(Level.SEVERE, null, ex);
        }

        btnCalendario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Google_Calendar_icon-icons.com_75710.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNovaVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(edtData)
                                .addGap(6, 6, 6)))
                        .addComponent(btnCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnFinalizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(edtQuantidadeDeItens, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addGap(125, 125, 125)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelarVenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(edtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel4)
                                .addGap(2, 2, 2)
                                .addComponent(edtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCalendario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(2, 2, 2)
                                        .addComponent(edtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNovaVenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelarVenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(2, 2, 2)
                        .addComponent(edtQuantidadeDeItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnFinalizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens da Venda"));

        jLabel6.setText("Cod. do Item");

        edtCodigoDoProduto.setEditable(false);
        edtCodigoDoProduto.setEnabled(false);

        jLabel7.setText("Descrição");

        edtDescricao.setEditable(false);
        edtDescricao.setEnabled(false);

        jLabel8.setText("Quantidade");

        jLabel9.setText("Preço Unitário");

        edtPrecoUnitario.setEditable(false);
        edtPrecoUnitario.setEnabled(false);

        JSpinner.NumberEditor jsEditor = (JSpinner.NumberEditor)spinnerQuantidade.getEditor();
        DefaultFormatter formatter = (DefaultFormatter) jsEditor.getTextField().getFormatter();
        formatter.setAllowsInvalid(false);
        spinnerQuantidade.setEnabled(false);

        btnAdicionarItem.setText("Adicionar Item");
        btnAdicionarItem.setEnabled(false);
        btnAdicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItemActionPerformed(evt);
            }
        });

        btnEditarItem.setText("Editar Item");
        btnEditarItem.setEnabled(false);
        btnEditarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarItemActionPerformed(evt);
            }
        });

        btnRemoverItem.setText("Remover Item");
        btnRemoverItem.setEnabled(false);
        btnRemoverItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverItemActionPerformed(evt);
            }
        });

        btnGravarEdicao.setText("Gravar Edição");
        btnGravarEdicao.setEnabled(false);
        btnGravarEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarEdicaoActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Buscar");
        btnPesquisar.setEnabled(false);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edtCodigoDoProduto))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(edtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(spinnerQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(edtPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAdicionarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btnEditarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btnGravarEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoverItem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(8, 8, 8)
                                .addComponent(spinnerQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(8, 8, 8)
                                .addComponent(edtPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edtCodigoDoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdicionarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGravarEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRemoverItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        tabItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Quantidade", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabItens.getTableHeader().setResizingAllowed(false);
        tabItens.getTableHeader().setReorderingAllowed(false);
        tabItens.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(70);
        tabItens.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(70);
        tabItens.getTableHeader().getColumnModel().getColumn(3).setMinWidth(100);
        tabItens.getTableHeader().getColumnModel().getColumn(3).setMaxWidth(150);
        jScrollPane2.setViewportView(tabItens);

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarVendaActionPerformed
       finalizarVenda();
    }//GEN-LAST:event_btnFinalizarVendaActionPerformed
    
    private void exibirCalendario(){
        
    }
    
    private void btnNovaVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaVendaActionPerformed
       
        edtData.setEnabled(true);
        btnCancelarVenda.setEnabled(true);
        edtValorTotal.setEnabled(true);
        edtQuantidadeDeItens.setEnabled(true);
        btnNovaVenda.setEnabled(false);
        btnPesquisar.setEnabled(true);
        valorDaVenda = 0;
        produtos = new ArrayList<>();
        quantidadeTotalDeItens = 0;
        edtValorTotal.setText(NumberFormat.getCurrencyInstance().format(valorDaVenda));
        edtQuantidadeDeItens.setText(""+quantidadeTotalDeItens);
        
    }//GEN-LAST:event_btnNovaVendaActionPerformed

    private void btnCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVendaActionPerformed
        cancelarVenda();
    }//GEN-LAST:event_btnCancelarVendaActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        buscarProduto();
    }//GEN-LAST:event_btnPesquisarActionPerformed
    
    // Busca um produto para adicionar à lista de produtos
    private void buscarProduto(){
        DialogPesquisaProdutos d = new DialogPesquisaProdutos(this);
        d.setLocationRelativeTo(this);
        d.show();
        ultimoProdutoBuscado = d.getProdutoSelecionado();
        edtCodigoDoProduto.setText(""+ultimoProdutoBuscado.getCodigo());
        edtCodigoDoProduto.setEnabled(true);
        edtDescricao.setText(ultimoProdutoBuscado.getDescricao());
        edtDescricao.setEnabled(true);
        double preco = ultimoProdutoBuscado.getValorCusto() + ultimoProdutoBuscado.getValorCusto()*(ultimoProdutoBuscado.getIcms() + ultimoProdutoBuscado.getIpi() + ultimoProdutoBuscado.getLucro() + ultimoProdutoBuscado.getOutrosImpostos());
        edtPrecoUnitario.setText((NumberFormat.getCurrencyInstance().format(preco)));
        edtPrecoUnitario.setEnabled(true);
        spinnerQuantidade.setEnabled(true);
        
        //Verifica se o produto buscado já está na lista, atualizando o estoque
        for(Produto p : produtos){
            if(p.getCodigo() == ultimoProdutoBuscado.getCodigo())
                ultimoProdutoBuscado = p;
        }
        spinnerQuantidade.setModel(new SpinnerNumberModel(1,0,ultimoProdutoBuscado.getEstoque(),1));
        btnAdicionarItem.setEnabled(true);
        
    }
    
    private void finalizarVenda(){
        DialogFinalizarVenda d = new DialogFinalizarVenda(this,produtos,edtData.getText(),edtValorTotal.getText());
        d.show();
        if(d.isVendaFinalizada()){
            super.dispose();
        }
    }
    
    private void cancelarVenda(){
        int sair = JOptionPane.showConfirmDialog(null, "DESEJA REALMENTE CANCELAR A VENDA ?",
                "Cancelar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(sair == JOptionPane.YES_OPTION){
            super.dispose();
        }
    }
    
    private void btnGravarEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarEdicaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGravarEdicaoActionPerformed

    private void btnEditarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarItemActionPerformed

    private void btnAdicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItemActionPerformed
        adicionaItemALista();
    }//GEN-LAST:event_btnAdicionarItemActionPerformed

    private void btnRemoverItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverItemActionPerformed
        removeItem();
    }//GEN-LAST:event_btnRemoverItemActionPerformed

    private void edtQuantidadeDeItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtQuantidadeDeItensActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtQuantidadeDeItensActionPerformed
    
    //Adiciona um item à lista de compras
    private void adicionaItemALista(){
        DefaultTableModel model = (DefaultTableModel) tabItens.getModel();
        int quantidadeItens  = (int)Double.parseDouble(spinnerQuantidade.getValue().toString());
        quantidadeTotalDeItens += quantidadeItens;
        edtQuantidadeDeItens.setText(""+quantidadeTotalDeItens);
        atualizaEstoque(ultimoProdutoBuscado, quantidadeItens);
        double precoItem = Double.parseDouble(edtPrecoUnitario.getText().split(" ")[1].replace(',', '.'));
        double precoTotalItem = quantidadeItens*precoItem;
        valorDaVenda+=precoTotalItem;
        edtValorTotal.setText(NumberFormat.getCurrencyInstance().format(valorDaVenda));
        Object[] produto = {edtCodigoDoProduto.getText(),edtDescricao.getText(),quantidadeItens,NumberFormat.getCurrencyInstance().format(precoTotalItem)};
        model.addRow(produto);
        edtCodigoDoProduto.setText("");
        edtDescricao.setText("");
        edtPrecoUnitario.setText("");
        spinnerQuantidade.setValue(1);
        edtCodigoDoProduto.setEnabled(false);
        edtDescricao.setEnabled(false);
        edtPrecoUnitario.setEnabled(false);
        spinnerQuantidade.setEnabled(false);
        btnAdicionarItem.setEnabled(false);
        btnEditarItem.setEnabled(true);
        btnRemoverItem.setEnabled(true);
        btnFinalizarVenda.setEnabled(true);
    }
    
    private void removeItem(){
        int[] selecionados = tabItens.getSelectedRows();
        int[][] cod_quant = new int[selecionados.length][2];
        ArrayList<Produto> removidos = new ArrayList<>();
        ConexaoBD conexao = new ConexaoBD();
        conexao.conectar();
        ResultSet res;
        for(int i = 0; i < selecionados.length; i++){
            
            cod_quant[i][0] = Integer.parseInt(tabItens.getValueAt(selecionados[i],0).toString());
            cod_quant[i][1] =Integer.parseInt(tabItens.getValueAt(selecionados[i],2).toString());
        }
        for(int i = 0; i < selecionados.length; i++){
            int cod = cod_quant[i][0];
            int quant = cod_quant[i][1];
            for(Produto p : produtos){
                if(p.getCodigo()==cod){
                    
                    //Descobre a quantidade comprada do produto
                    String sql = "SELECT P.estoque FROM PRODUTO P WHERE P.codigo = "+p.getCodigo();
                    try {
                        res = conexao.consultaBD(sql);
                        res.next();
                        int quantidade = res.getInt("estoque") - p.getEstoque();
                        valorDaVenda = valorDaVenda - quant*p.precoRevenda();
                        quantidadeTotalDeItens = quantidadeTotalDeItens - quant;
                        edtValorTotal.setText(NumberFormat.getCurrencyInstance().format(valorDaVenda));
                        edtQuantidadeDeItens.setText(""+quantidadeTotalDeItens);
                        if(quantidade == quant)
                            removidos.add(p);
                        else
                            p.setEstoque(p.getEstoque()+quant);
                            
                    } catch (SQLException ex) {
                        Logger.getLogger(TelaDeVenda.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            
            produtos.removeAll(removidos);
            System.out.println("QUANTIDADE DE PRODUTOS NA VENDA : "+produtos.size());
        }
        
        DefaultTableModel model = (DefaultTableModel) tabItens.getModel();
        while(selecionados.length > 0){
            model.removeRow(selecionados[selecionados.length-1]);
            selecionados = tabItens.getSelectedRows();
        }
    }
    
    //Atualiza o estoque dos produtos que foram adicionados no carrinho
    public void atualizaEstoque(Produto add, int quantidade){
        //Verifica se o produto adicionado já está no carrinho
        boolean contem = true;
        for(Produto aux : produtos){
            int estoqueAtual = aux.getEstoque();
            if(aux.getCodigo() == add.getCodigo()){
                aux.setEstoque(estoqueAtual-quantidade);
                contem = false;
            }
        }
        if(contem){
            add.setEstoque(add.getEstoque()- quantidade);
            produtos.add(add);
        }    
    }
   
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDeVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDeVenda().setVisible(true);
            }
        });
    }
    
    @Override
    public void dispose() {
        int sair = JOptionPane.showConfirmDialog(null, "DESEJA REALMENTE SAIR DO CADASTRO ?",
                "Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if(sair == JOptionPane.YES_OPTION){
            super.dispose();
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarItem;
    private javax.swing.JButton btnCalendario;
    private javax.swing.JButton btnCancelarVenda;
    private javax.swing.JButton btnEditarItem;
    private javax.swing.JButton btnFinalizarVenda;
    private javax.swing.JButton btnGravarEdicao;
    private javax.swing.JButton btnNovaVenda;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnRemoverItem;
    private javax.swing.JTextField edtCodigoDoProduto;
    private javax.swing.JFormattedTextField edtData;
    private javax.swing.JTextField edtDescricao;
    private javax.swing.JTextField edtPrecoUnitario;
    private javax.swing.JTextField edtQuantidadeDeItens;
    private javax.swing.JTextField edtValorTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JSpinner spinnerQuantidade;
    private javax.swing.JTable tabItens;
    // End of variables declaration//GEN-END:variables
}
